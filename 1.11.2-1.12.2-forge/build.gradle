buildscript() {
    repositories() {
        mavenCentral()
        gradlePluginPortal()
        maven() {
            url = 'https://repo.spongepowered.org/repository/maven-public/'
        }
        maven() {
            url = 'https://maven.minecraftforge.net/'
        }
    }
    dependencies() {
        classpath('net.minecraftforge.gradle:ForgeGradle:3.+')
        classpath('com.github.johnrengelman.shadow:com.github.johnrengelman.shadow.gradle.plugin:4.0.4')
        classpath('org.spongepowered:mixingradle:0.7-SNAPSHOT')
    }
}

apply(plugin: 'net.minecraftforge.gradle')
apply(plugin: 'com.github.johnrengelman.shadow')
apply(plugin: 'org.spongepowered.mixin')
        
version = '4.3.0'
group = 'online.flowerinsnow.greatscrollabletooltips'
archivesBaseName = 'great-scrollable-tooltips'

minecraft() {
    // The mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   Snapshot are built nightly.
    // stable_#            Stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // Simply re-run your setup task after changing the mappings to update your workspace.
    //mappings channel: 'snapshot', version: '20171003-1.12'
    mappings(channel: 'snapshot', version: '20171003-1.12')
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
    
    // accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    // Default run configurations.
    // These can be tweaked, removed, or duplicated as needed.
    runs() {
        client() {
            workingDirectory(project.file('run'))

            // Recommended logging data for a userdev environment
            property('forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP')

            // Recommended logging level for the console
            property('forge.logging.console.level', 'debug')
        }

        server() {

            // Recommended logging data for a userdev environment
            property('forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP')

            // Recommended logging level for the console
            property('forge.logging.console.level', 'debug')
        }
    }
}

repositories() {
    mavenCentral()

    maven() {
        url 'https://repo.spongepowered.org/repository/maven-public/'
    }

    maven() {
        url = 'https://maven.pkg.github.com/flowerinsnowdh/GreatScrollableTooltips'
        credentials() {
            username = "${System.getenv('GITHUB_USERNAME')}"
            password = "${System.getenv('GITHUB_TOKEN')}"
        }
    }
}

dependencies() {
    minecraft('net.minecraftforge:forge:1.12.2-14.23.5.2860')

    compile("cn.flowerinsnow.greatscrollabletooltips:common:${version_common_module}") {
        exclude(module: 'core')
        exclude(module: 'toml')
    }

    compile("com.electronwill.night-config:toml:${version_night_config}")

    compile("org.spongepowered:mixin:${version_mixin}") {
        exclude(module: 'guava')
        exclude(module: 'commons-io')
        exclude(module: 'gson')
    }
}

processResources() {
    LinkedHashMap<String, ?> props = ['version': project.version]
    props.forEach() {k, v ->
        inputs.property(k, v)
    }
    filesMatching('mcmod.info') {
        expand(props)
    }
}

// Example for how to get properties into the manifest for reading by the runtime..
jar() {
    manifest() {
        attributes([
            "Specification-Title": "Great Scrollable Tooltips",
            "Specification-Vendor": "",
            "Specification-Version": "1", // We are version 1 of ourselves
            "Implementation-Title": project.name,
            "Implementation-Version": "${version}",
            "Implementation-Vendor" :"",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

// Example configuration to allow publishing using the maven-publish task
// This is the preferred method to reobfuscate your jar file
jar.finalizedBy('reobfJar') 
// However if you are in a multi-project build, dev time needs unobfed jar files, so you can delay the obfuscation until publishing by doing
//publish.dependsOn('reobfJar')

tasks.withType(JavaCompile).configureEach {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
    options.encoding = 'UTF-8'
}

shadowJar() {
    manifest() {
        attributes([
                'TweakClass': 'online.flowerinsnow.greatscrollabletooltips.tweaker.GreatScrollableTooltipsTweaker'
        ])
    }

    dependencies() {
        include(dependency("cn.flowerinsnow.greatscrollabletooltips:common:${version_common_module}"))
        include(dependency("com.electronwill.night-config:core:${version_night_config}"))
        include(dependency("com.electronwill.night-config:toml:${version_night_config}"))
        include(dependency("org.spongepowered:mixin:${version_mixin}"))
    }

    classifier = ''
}

reobf() {
    shadowJar() {
    }
}

mixin() {
    add(sourceSets.main, "great-scrollable-tooltips-refmap.json")
}
